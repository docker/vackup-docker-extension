name: Build, Scan and Push

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  build-tests:
    name: Build and run tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up Go
        if: matrix.os != 'self-hosted'
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Build
        working-directory: vm
        run: |
          go mod download
          go build -trimpath -ldflags="-s -w" -o bin/service

      - name: Test
        working-directory: vm
        run: go test -v ./... --count=1

  build-image:
    needs: build-tests
    name: Build Image
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write # needed to create and update comments in PRs
      # actions: read # for github/codeql-action/upload-sarif, only required for workflows in private repositories
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tag for Docker Image
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: docker/${{ github.event.repository.name }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}

      - name: Docker Build and Push to Docker Hub
        env:
          GIT_COMMIT: ${{ github.event.pull_request.head.sha || github.event.after || github.event.release.tag_name }}
          TAG: ${{ steps.docker_meta.outputs.version }}
          BUGSNAG_RELEASE_STAGE: production
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
        run: |
          make push-extension

        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v1
        if: ${{ !github.event.pull_request.head.repo.fork && github.event_name == 'pull_request' }}
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Docker image tag(s) pushed

        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ !github.event.pull_request.head.repo.fork && github.event_name == 'pull_request' }}
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```
            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace
